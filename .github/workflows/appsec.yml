name: devSecops
permissions:
  contents: write
  security-events: write

on:
  push:
    branches: [ FR-sarif ]
  #pull_request:
  #  branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: frontend/package.json
      - name: Checkout Prioritization Script
        uses: actions/checkout@v4
        with:
          repository: joeshope/sarif_script

      #- name: Cache Node modules
      #  uses: actions/cache@v4
      #  with:
      #    path: ~/.npm
      #    key: juice-shop-node-${{ hashFiles('**/package-lock.json') }}
      #    restore-keys: |
      #      ${{ runner.os }}-node-
    #  - run: npm install --package-lock-only
      - run: npm install
      - run: npm i -g snyk
      - run: snyk auth ${{ secrets.SNYK_TOKEN }}


     # - name: install snyk-to-html
     #   run: |
     #     npm install snyk-to-html -g
      #    snyk test --json | snyk-to-html -o result.html

      - name: Snyk Open Source # For testing and failing please add snyk test before snyk monitor
        run: |
          snyk test --all-projects --sarif > opensource.sarif || true
         # snyk monitor --all-projects --project-business-criticality=critical --project-tags="component=pkg:juice-shop-bash@main" --org=8732cc6d-085e-4f1d-ba98-cf4b491723fb || true
     # - name: Snyk Code HTML # Remove || true to fail if there are vulnerabilities
     #   run: |  
     #      snyk code test --json | snyk-to-html -o results-code.html || true

     # - name: Snyk Code SARIF # Remove || true to fail if there are vulnerabilities
     #   run: |  
          #snyk code test --sarif  > results.sarif || true
      - name: Change Severity
        run: python example.py --file opensource.sarif
     # - name: Set SARIF file permissions
     #   run: chmod 644 results.sarif

     # - name: Check SARIF file size
     #   run: |
     #     if [ ! -s results.sarif ]; then
     #     echo "SARIF file is empty or invalid"; exit 1
     #       fi
      
      #- name: Snyk IaC # Remove || true to fail if there are vulnerabilities
      #  run: |
      #   snyk iac test --report --org=8732cc6d-085e-4f1d-ba98-cf4b491723fb || true
     
      #- name: Snyk Container # Rename your image, for testing and failing please add snyk container test before snyk container monitor
      #  run: |
      #    docker build . -t freshdemo/juice-shop-bash:latest
      #    snyk container monitor freshdemo/juice-shop-bash:latest --file=Dockerfile --project-business-criticality=critical --project-tags="component=pkg:juice-shop-bash@main" --org=8732cc6d-085e-4f1d-ba98-cf4b491723fb
          
      #- name: Use the Upload Artifact GitHub Action
      #  uses: actions/upload-artifact@v4
      #  with:
      #    name: results-code
      #    path: results-code.html
            
      #- name: Upload Code SARIF file
      #  uses: github/codeql-action/upload-sarif@v3
      #  with:
      #    sarif_file: results.sarif
      - name: Upload Open Source SARIF file
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: opensource.sarif